var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.083,1,1.858]],["body/controllers/AppController.html",[0,1.744,1,2.992,2,1.406,3,0.509,4,0.438,5,0.438,6,3.202,7,1.271,8,0.034,9,4.827,10,0.631,11,0.039,12,0.933,13,2.586,14,3.202,15,0.509,16,3.202,17,1.724,18,0.031,19,0.031]],["title/modules/AppModule.html",[20,1.083,21,1.858]],["body/modules/AppModule.html",[1,2.85,2,1.459,3,0.387,4,0.333,5,0.333,8,0.019,10,0.698,11,0.039,12,0.71,13,2.629,14,2.436,15,0.387,18,0.026,19,0.026,20,1.662,21,3.597,22,1.311,23,1.311,24,1.629,25,1.629,26,1.311,27,2.531,28,1.629,29,2.436,30,2.436,31,2.436,32,2.629,33,2.938,34,2.365,35,2.223,36,1.629,37,1.458,38,2.959,39,2.503,40,2.959,41,2.959,42,2.959,43,2.959]],["title/injectables/AppService.html",[13,1.477,44,1.083]],["body/injectables/AppService.html",[3,0.471,4,0.406,5,0.406,7,1.177,8,0.033,10,0.471,11,0.039,12,0.864,13,2.266,15,0.471,18,0.03,19,0.03,44,1.662,45,1.983,46,2.965,47,4.599,48,2.266,49,0.775,50,2.266,51,5.338,52,1.064,53,3.602,54,3.251,55,1.775,56,1.662,57,1.775,58,3.602,59,3.602,60,2.965]],["title/controllers/AuthController.html",[0,1.083,61,1.858]],["body/controllers/AuthController.html",[0,1.406,2,1.406,3,0.509,4,0.438,5,0.438,8,0.025,10,0.631,11,0.039,12,0.933,15,0.509,17,1.724,18,0.031,19,0.031,61,2.992,62,3.202,63,2.75,64,3.974,65,2.326,66,3.202,67,3.89,68,2.141,69,2.141,70,2.411,71,2.141]],["title/modules/AuthModule.html",[20,1.083,32,1.477]],["body/modules/AuthModule.html",[2,1.543,3,0.421,4,0.362,5,0.362,8,0.021,10,0.668,11,0.039,12,0.771,15,0.421,18,0.028,19,0.028,20,1.733,22,1.425,23,1.425,24,1.77,25,1.77,26,1.425,27,2.64,28,2.64,32,2.749,34,1.893,35,2.351,36,1.77,37,1.584,39,1.993,61,2.973,65,2.606,66,2.647,72,2.647,73,2.647,74,2.647,75,3.215,76,2.648,77,3.215,78,2.647]],["title/injectables/AuthService.html",[44,1.083,65,1.329]],["body/injectables/AuthService.html",[3,0.369,4,0.317,5,0.317,8,0.018,10,0.511,11,0.039,12,0.676,15,0.369,17,1.25,18,0.025,19,0.025,44,1.412,45,1.552,48,1.389,49,0.606,50,1.925,52,1.324,55,1.925,56,2.042,57,1.925,65,1.731,68,2.151,69,1.552,70,1.748,71,1.552,76,1.748,79,2.321,80,2.895,81,3.985,82,3.907,83,2.321,84,2.156,85,2.82,86,2.151,87,1.925,88,1.154,89,1.562,90,2.82,91,2.82,92,3.907,93,3.691,94,2.779,95,2.82,96,1.993,97,2.321,98,2.321,99,2.321,100,2.321,101,2.422,102,2.82,103,2.82,104,2.321]],["title/classes/CreatePostDto.html",[8,0.019,105,1.65]],["body/classes/CreatePostDto.html",[3,0.158,4,0.136,5,0.136,7,1.592,8,0.017,10,0.486,11,0.039,15,0.158,18,0.013,19,0.013,49,0.259,52,1.315,56,1.76,87,0.998,88,1.547,89,1.781,104,2.822,105,1.115,106,0.534,107,3.237,108,0.852,109,1.048,110,2.423,111,2.622,112,2.622,113,3.411,114,2.622,115,2.622,116,3.427,117,1.853,118,3.427,119,2.822,120,1.974,121,2.822,122,1.979,123,2.797,124,2.026,125,1.668,126,1.205,127,1.205,128,2.026,129,2.026,130,3.427,131,2.53,132,1.205,133,1.205,134,1.905,135,1.205,136,3.073,137,2.158,138,1.668,139,2.026,140,1.205,141,1.205,142,1.205,143,2.026,144,3.073,145,3.073,146,1.256,147,1.668,148,1.205,149,1.205,150,3.073,151,2.158,152,2.026,153,2.026,154,1.205,155,1.205,156,2.026,157,2.026,158,2.026,159,2.026,160,2.026,161,2.026,162,2.026,163,2.026,164,1.205,165,1.205,166,1.205,167,1.205,168,0.992,169,1.205,170,3.073,171,3.073,172,1.668,173,2.026,174,2.026,175,2.026,176,2.026,177,2.026,178,1.205,179,2.822,180,1.668,181,1.668,182,1.668,183,1.205,184,1.205,185,1.205,186,1.205,187,3.073,188,1.205,189,1.205,190,2.026,191,1.205,192,1.205,193,2.622,194,1.205,195,2.026,196,2.026,197,2.125,198,2.79,199,2.423,200,2.026,201,0.992,202,0.992,203,2.026,204,0.594,205,1.205,206,1.205,207,0.852,208,0.852,209,1.853,210,1.853,211,1.205,212,2.822,213,3.25,214,0.594,215,1.205,216,1.205,217,2.026,218,0.992,219,1.205,220,1.205,221,1.205,222,1.205,223,1.205,224,1.205,225,1.205,226,1.205,227,1.205,228,1.205,229,1.205,230,1.205,231,0.992,232,1.205,233,2.158,234,1.205,235,1.625]],["title/classes/CreatePostMetaOptionsDto.html",[8,0.019,134,1.858]],["body/classes/CreatePostMetaOptionsDto.html",[3,0.456,4,0.393,5,0.393,8,0.029,10,0.456,11,0.038,15,0.456,18,0.029,19,0.029,49,0.75,52,1.33,56,1.628,88,1.33,106,1.546,107,3.528,109,1.802,120,1.997,122,1.996,134,2.793,197,3.27,199,3.185,204,1.719,209,3.528,210,3.528,233,4.109,235,3.094,236,2.872,237,3.489,238,3.489,239,3.489]],["title/classes/CreateUserDto.html",[8,0.019,240,1.65]],["body/classes/CreateUserDto.html",[3,0.35,4,0.301,5,0.301,8,0.024,10,0.35,11,0.038,15,0.35,18,0.024,19,0.024,49,0.575,52,1.397,56,1.96,88,1.397,89,1.506,93,3.587,96,3.08,106,1.185,109,1.506,120,2.096,172,3.1,197,2.932,198,2.661,199,3.524,201,2.202,202,2.202,204,1.318,231,3.1,240,2.073,241,4.104,242,1.89,243,4.358,244,4.358,245,2.674,246,2.674,247,2.674,248,2.674,249,2.674,250,2.674,251,2.674,252,4.73,253,3.765,254,3.765,255,3.765,256,3.765,257,3.765,258,3.765,259,3.765,260,2.073,261,3.765,262,3.765,263,3.765,264,2.674,265,3.765,266,2.674,267,3.765,268,2.674,269,2.674]],["title/classes/GetUsersParamDto.html",[8,0.019,270,1.65]],["body/classes/GetUsersParamDto.html",[3,0.437,4,0.376,5,0.376,7,1.091,8,0.032,10,0.639,11,0.039,15,0.437,18,0.028,19,0.028,48,2.157,49,0.718,52,0.986,88,1.443,89,1.751,94,3.338,101,2.715,106,1.48,109,1.751,120,1.48,121,2.749,123,2.411,198,3.095,204,1.645,207,2.36,213,3.605,214,1.645,260,2.69,270,2.411,271,3.605,272,2.749,273,4.379,274,3.339,275,3.339,276,3.605,277,2.749]],["title/classes/PatchPostDto.html",[8,0.019,278,1.858]],["body/classes/PatchPostDto.html",[3,0.441,4,0.379,5,0.379,7,1.101,8,0.028,10,0.642,11,0.038,15,0.441,18,0.028,19,0.028,49,0.724,52,0.995,88,0.995,94,3.347,105,1.854,106,1.493,108,2.381,109,1.761,120,1.493,122,1.761,123,2.424,168,2.773,197,2.73,204,1.659,208,2.381,212,3.626,214,1.659,260,2.424,276,3.626,277,2.773,278,2.73,279,3.626,280,3.626,281,4.404,282,3.626,283,3.368,284,3.368,285,2.773,286,2.773]],["title/classes/PatchUserDto.html",[8,0.019,287,1.858]],["body/classes/PatchUserDto.html",[3,0.53,4,0.456,5,0.456,8,0.026,10,0.647,11,0.038,15,0.53,18,0.032,19,0.032,106,1.796,208,2.864,240,2.23,242,2.864,280,4.075,285,3.336,287,3.068,288,3.336,289,4.95,290,3.336,291,3.336,292,3.336]],["title/controllers/PostsController.html",[0,1.083,293,1.858]],["body/controllers/PostsController.html",[0,0.738,2,0.738,3,0.267,4,0.23,5,0.23,7,1.36,8,0.013,10,0.585,11,0.039,12,0.49,15,0.267,17,0.905,18,0.02,19,0.02,49,0.439,50,1.524,52,1.102,55,2.202,56,1.348,57,1.007,63,1.444,68,1.125,69,1.125,70,1.266,71,1.125,80,2.835,86,2.054,87,1.838,88,1.102,89,1.492,105,2.291,110,2.186,117,2.941,120,1.654,122,2.012,131,4.141,214,1.007,278,2.915,282,2.546,286,2.546,293,1.917,294,1.682,295,3.092,296,4.161,297,3.092,298,3.092,299,2.043,300,3.092,301,3.092,302,2.186,303,3.092,304,4.703,305,3.092,306,3.092,307,2.043,308,2.043,309,3.092,310,2.043,311,3.092,312,2.043,313,3.072,314,2.043,315,2.546,316,2.546,317,3.092,318,2.043,319,2.043,320,1.682,321,1.444,322,2.546,323,1.838,324,1.682,325,3.072,326,3.072,327,1.682,328,1.682,329,1.682,330,2.043,331,2.043,332,2.043,333,2.043,334,2.043,335,2.546,336,2.546,337,2.043,338,2.043,339,2.043,340,2.043]],["title/modules/PostsModule.html",[20,1.083,33,1.65]],["body/modules/PostsModule.html",[2,1.565,3,0.429,4,0.37,5,0.37,8,0.021,10,0.674,11,0.039,12,0.787,15,0.429,18,0.028,19,0.028,20,1.751,22,1.455,23,1.455,24,1.807,25,1.807,26,1.455,27,2.667,28,1.807,33,3.133,34,2.437,35,2.384,36,1.807,37,1.618,39,2.684,78,2.703,293,3.004,323,2.71,324,2.703,341,2.703,342,2.703,343,3.283,344,3.283,345,3.283]],["title/injectables/PostsService.html",[44,1.083,323,1.477]],["body/injectables/PostsService.html",[3,0.388,4,0.334,5,0.334,8,0.019,10,0.53,11,0.039,12,0.712,15,0.388,17,1.316,18,0.026,19,0.026,44,1.463,45,1.635,49,0.639,50,1.995,52,1.196,55,1.463,56,1.665,57,1.463,68,2.229,69,1.635,71,1.635,80,2.536,83,2.445,84,2.186,86,2.229,87,1.995,88,1.196,89,1.619,98,2.445,100,2.445,101,3.209,110,3.497,119,3.333,122,1.978,313,2.445,323,1.995,346,2.445,347,3.333,348,2.97,349,4.049,350,2.97,351,2.97,352,3.333]],["title/controllers/UsersController.html",[0,1.083,353,1.858]],["body/controllers/UsersController.html",[0,0.635,2,0.635,3,0.23,4,0.198,5,0.198,7,1.446,8,0.011,10,0.579,11,0.038,12,0.421,15,0.23,16,1.447,17,0.779,18,0.018,19,0.018,48,2.28,49,0.378,50,1.357,52,1.003,55,1.673,56,0.635,57,2.056,63,1.242,80,2.711,84,1.358,86,1.869,87,2.056,88,1.366,89,1.358,117,1.242,120,1.505,122,1.537,123,2.115,137,2.267,138,2.267,146,2.97,214,0.866,240,2.437,260,2.949,270,2.437,287,2.97,292,2.267,302,1.946,316,2.267,320,1.447,321,1.946,322,2.795,325,2.267,326,2.267,327,1.447,328,1.447,329,1.447,335,1.447,336,2.267,353,1.707,354,1.447,355,2.753,356,3.395,357,2.753,358,1.757,359,1.757,360,1.757,361,3.644,362,1.757,363,2.753,364,2.753,365,2.753,366,1.757,367,2.753,368,2.753,369,1.757,370,2.753,371,2.753,372,2.753,373,3.843,374,1.757,375,2.753,376,2.753,377,2.753,378,2.267,379,1.757,380,1.757,381,1.757,382,1.757,383,1.757,384,1.757,385,1.757,386,3.395,387,1.757,388,1.757,389,1.447,390,1.447,391,1.447,392,3.395,393,1.757,394,1.757,395,1.757,396,1.242,397,2.753,398,1.757,399,1.757,400,1.757,401,1.757,402,1.757,403,1.757,404,1.757,405,1.757,406,1.757,407,1.757,408,1.447,409,1.757]],["title/modules/UsersModule.html",[20,1.083,34,1.329]],["body/modules/UsersModule.html",[2,1.543,3,0.421,4,0.362,5,0.362,8,0.021,10,0.668,11,0.039,12,0.771,15,0.421,18,0.028,19,0.028,20,1.733,22,1.425,23,1.425,24,1.77,25,1.77,26,1.425,27,2.64,28,2.64,32,2.104,34,2.473,35,2.351,36,1.77,37,1.584,39,1.993,76,2.648,84,2.351,353,2.973,391,2.647,410,2.647,411,2.647,412,2.647,413,3.215,414,3.215,415,3.215]],["title/injectables/UsersService.html",[44,1.083,84,1.199]],["body/injectables/UsersService.html",[3,0.251,4,0.216,5,0.216,7,0.628,8,0.023,10,0.47,11,0.04,12,0.461,15,0.251,17,0.852,18,0.019,19,0.019,44,1.067,45,1.058,48,2.143,49,0.413,50,1.454,52,1.191,54,2.85,55,1.986,56,1.572,57,1.454,64,1.582,65,2.187,68,1.625,69,1.058,70,2.228,71,1.058,76,1.191,80,2.786,81,2.958,84,1.18,86,1.978,87,2.356,88,1.061,89,1.437,94,3.059,96,2.85,97,1.582,99,1.582,101,2.499,109,1.18,146,2.499,235,1.191,260,2.632,270,2.632,321,3.075,347,2.958,352,1.582,361,3.319,378,2.43,389,1.582,390,1.582,408,2.43,416,1.582,417,2.952,418,2.952,419,1.922,420,1.922,421,2.952,422,2.952,423,1.922,424,1.922,425,2.952,426,1.922,427,1.922,428,2.952,429,1.922,430,2.952,431,2.952,432,1.922,433,1.922,434,2.952,435,2.952,436,2.952,437,1.922,438,1.922,439,1.922]],["title/coverage.html",[440,2.88]],["body/coverage.html",[0,1.755,1,1.761,5,0.32,6,2.338,8,0.034,11,0.038,13,1.399,18,0.025,19,0.025,26,1.259,44,1.755,46,2.338,48,1.399,61,1.761,62,2.338,65,1.259,79,2.338,84,1.136,88,0.839,105,1.563,107,2.775,108,2.775,122,1.136,134,1.761,209,2.008,210,2.008,236,2.338,240,1.563,241,2.338,242,2.775,270,1.563,271,2.338,272,2.338,278,1.761,279,2.338,287,1.761,288,2.338,293,1.761,294,2.338,302,2.008,323,1.399,346,2.338,353,1.761,354,2.338,416,2.338,440,2.008,441,2.338,442,2.84,443,2.84,444,4.855,445,3.926,446,2.84,447,5.715,448,3.926,449,4.5,450,2.338,451,2.84,452,3.926,453,2.84,454,3.926,455,2.84,456,2.84,457,2.84,458,2.84]],["title/dependencies.html",[23,1.596,459,2.068]],["body/dependencies.html",[8,0.031,11,0.039,12,0.928,18,0.031,19,0.031,23,1.715,204,1.907,207,2.736,214,1.907,290,3.186,291,3.186,460,3.87,461,3.87,462,5.237,463,3.87,464,3.87,465,3.87,466,3.87,467,3.87,468,3.87,469,3.87,470,3.87,471,3.87,472,3.87,473,3.87,474,3.87]],["title/miscellaneous/enumerations.html",[475,1.557,476,2.965]],["body/miscellaneous/enumerations.html",[11,0.038,18,0.03,19,0.03,49,0.805,113,3.878,122,1.883,146,2.92,147,3.878,151,3.878,179,3.878,180,3.878,181,3.878,182,3.878,218,3.878,235,3.625,475,2.319,476,3.079,477,3.74,478,3.74,479,3.74,480,3.74]],["title/miscellaneous/functions.html",[475,1.557,481,2.965]],["body/miscellaneous/functions.html",[11,0.034,18,0.034,19,0.034,26,2.458,49,0.951,54,3.124,396,3.124,450,3.638,475,2.74,481,3.638,482,4.42,483,4.42]],["title/index.html",[49,0.54,484,2.512,485,2.512]],["body/index.html",[4,0.258,7,0.748,11,0.037,18,0.022,19,0.022,37,2.169,60,3.862,123,2.198,125,1.885,315,1.885,396,2.822,440,1.618,441,1.885,486,2.289,487,2.289,488,3.993,489,2.289,490,2.289,491,2.289,492,2.289,493,2.289,494,2.289,495,3.993,496,2.289,497,2.289,498,2.289,499,4.402,500,2.289,501,5.071,502,2.289,503,5.071,504,2.289,505,2.289,506,2.289,507,3.366,508,2.289,509,2.289,510,2.289,511,3.993,512,2.289,513,3.366,514,2.289,515,2.289,516,2.289,517,4.402,518,3.366,519,2.289,520,2.289,521,2.289,522,2.289,523,3.366,524,2.289,525,3.993,526,2.289,527,3.624,528,3.366,529,2.289,530,2.289,531,2.289,532,2.289,533,2.289,534,2.289,535,3.993,536,2.289,537,2.289,538,2.289,539,2.289,540,3.366,541,2.289,542,2.289,543,2.289,544,2.289,545,2.289,546,2.289,547,3.993,548,2.289,549,2.289,550,2.289,551,2.289,552,2.289,553,2.289,554,3.366,555,2.289,556,2.289,557,2.289,558,2.289,559,2.289,560,3.366,561,2.289,562,2.289,563,2.289,564,3.366,565,3.366,566,2.289,567,2.289,568,2.289,569,2.289,570,2.289,571,2.289,572,2.289,573,2.289,574,2.289,575,2.289,576,1.885,577,2.289,578,2.289,579,2.289,580,2.289,581,2.289,582,2.289,583,1.885]],["title/modules.html",[22,1.806]],["body/modules.html",[11,0.033,18,0.033,19,0.033,21,2.593,22,1.853,32,2.06,33,2.302,34,1.853,527,4.632,584,5.627,585,5.627,586,5.627]],["title/overview.html",[587,3.355]],["body/overview.html",[2,1.098,11,0.038,13,2.297,18,0.027,19,0.027,20,1.098,21,3.554,22,1.347,23,1.347,24,1.673,25,1.673,26,1.347,27,1.673,28,1.673,29,2.502,30,2.502,31,2.502,32,2.65,33,3.028,34,2.438,35,2.264,36,1.673,37,1.498,45,1.673,65,2.438,72,2.502,73,2.502,74,2.502,84,2.2,106,1.347,323,2.297,341,2.502,342,2.502,410,2.502,411,2.502,412,2.502,587,2.502,588,4.662,589,3.04]],["title/properties.html",[109,1.44,459,2.068]],["body/properties.html",[7,1.444,11,0.038,18,0.034,19,0.034,109,1.767,576,3.638,583,3.638,590,4.42,591,4.42,592,4.42]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":591,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["01t12:00:00z",{"_index":227,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["01t12:00:00z'})@isoptional()@isiso8601",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1",{"_index":378,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["1.1.23",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":398,"title":{},"body":{"controllers/UsersController.html":{}}}],["10.0.0",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["10})@apiquery({name",{"_index":374,"title":{},"body":{"controllers/UsersController.html":{}}}],["1234",{"_index":277,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["1234})@isint()@isnotempty",{"_index":283,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["1234})@isoptional()@isint()@type(undefined",{"_index":274,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["2",{"_index":352,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["2.0.5",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":316,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":304,"title":{},"body":{"controllers/PostsController.html":{}}}],["2022",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["4",{"_index":588,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":589,"title":{},"body":{"overview.html":{}}}],["7.3.0",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["access_token",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":570,"title":{},"body":{"index.html":{}}}],["api",{"_index":377,"title":{},"body":{"controllers/UsersController.html":{}}}],["apioperation",{"_index":325,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":300,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiproperty",{"_index":212,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty({description",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty({enum",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty({example",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional",{"_index":213,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({description",{"_index":121,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({type",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiquery",{"_index":392,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":326,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":327,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags('posts",{"_index":331,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":394,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":396,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["application'})@apiresponse({status",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["applications",{"_index":494,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":21,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":13,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["auth",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["auth.controller",{"_index":77,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":61,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":431,"title":{},"body":{"injectables/UsersService.html":{}}}],["authmodule",{"_index":32,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":576,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":65,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["aws",{"_index":539,"title":{},"body":{"index.html":{}}}],["backers",{"_index":571,"title":{},"body":{"index.html":{}}}],["based",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{}}}],["blog",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{}}}],["board",{"_index":563,"title":{},"body":{"index.html":{}}}],["body",{"_index":320,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":586,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":584,"title":{},"body":{"modules.html":{}}}],["building",{"_index":489,"title":{},"body":{"index.html":{}}}],["channel",{"_index":530,"title":{},"body":{"index.html":{}}}],["character",{"_index":263,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["check",{"_index":517,"title":{},"body":{"index.html":{}}}],["checks",{"_index":430,"title":{},"body":{"injectables/UsersService.html":{}}}],["circular",{"_index":421,"title":{},"body":{"injectables/UsersService.html":{}}}],["class",{"_index":8,"title":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":106,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"overview.html":{}}}],["clicks",{"_index":542,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":72,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":73,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":74,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":341,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":343,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":342,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":410,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":411,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":412,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":305,"title":{},"body":{"controllers/PostsController.html":{}}}],["come",{"_index":520,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["connect",{"_index":47,"title":{},"body":{"injectables/AppService.html":{}}}],["connects",{"_index":417,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(createpost",{"_index":338,"title":{},"body":{"controllers/PostsController.html":{}}}],["console.log(createuserdto",{"_index":405,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(patchpostdto",{"_index":340,"title":{},"body":{"controllers/PostsController.html":{}}}],["console.log(this.isauth",{"_index":433,"title":{},"body":{"injectables/UsersService.html":{}}}],["const",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["constructor",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":419,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["constructor(usersservice",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["content",{"_index":110,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["context",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":330,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":393,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":537,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":440,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":208,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["created",{"_index":306,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost",{"_index":296,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(@body",{"_index":337,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpost",{"_index":299,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostdto",{"_index":105,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["createpostmetaoptionsdto",{"_index":134,"title":{"classes/CreatePostMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["creates",{"_index":301,"title":{},"body":{"controllers/PostsController.html":{}}}],["createuser",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":404,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(createuserdto",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":240,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["date",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["declarations",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":120,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":532,"title":{},"body":{"index.html":{}}}],["default",{"_index":427,"title":{},"body":{"injectables/UsersService.html":{}}}],["defaultvaluepipe",{"_index":387,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(1",{"_index":402,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":400,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":383,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":23,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":538,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":504,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":549,"title":{},"body":{"index.html":{}}}],["discord",{"_index":529,"title":{},"body":{"index.html":{}}}],["dive",{"_index":531,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":441,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":435,"title":{},"body":{"injectables/UsersService.html":{}}}],["draft",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["dto",{"_index":211,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["dto.ts",{"_index":236,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["dto.ts:6",{"_index":238,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["dto.ts:9",{"_index":239,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["dtos/create",{"_index":328,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["dtos/get",{"_index":389,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/patch",{"_index":329,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["e2e",{"_index":514,"title":{},"body":{"index.html":{}}}],["each",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":490,"title":{},"body":{"index.html":{}}}],["email",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["endpoint",{"_index":408,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["enterprise",{"_index":553,"title":{},"body":{"index.html":{}}}],["entries",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["enum",{"_index":217,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":476,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/poststatus.enum",{"_index":205,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enums/posttype.enum",{"_index":206,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["error",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["example",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["experience",{"_index":534,"title":{},"body":{"index.html":{}}}],["export",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":280,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["false",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["feature",{"_index":128,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["featuredimageurl",{"_index":111,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["fetched",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{}}}],["fetches",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["few",{"_index":518,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":347,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall(getusersparamdto",{"_index":423,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(userid",{"_index":349,"title":{},"body":{"injectables/PostsService.html":{}}}],["finduserbyid",{"_index":418,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyid(id",{"_index":425,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["follow",{"_index":556,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":76,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":488,"title":{},"body":{"index.html":{}}}],["full",{"_index":552,"title":{},"body":{"index.html":{}}}],["function",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":481,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":395,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id?')@apioperation({summary",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:userid",{"_index":311,"title":{},"body":{"controllers/PostsController.html":{}}}],["gethello",{"_index":51,"title":{},"body":{"injectables/AppService.html":{}}}],["getposts",{"_index":297,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param",{"_index":333,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(userid",{"_index":310,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":484,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":356,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(getusersparamdto",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersparamdto",{"_index":270,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["given",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["go",{"_index":222,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["go....'})@isoptional()@isstring",{"_index":126,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["graph",{"_index":544,"title":{},"body":{"index.html":{}}}],["grow",{"_index":567,"title":{},"body":{"index.html":{}}}],["hands",{"_index":533,"title":{},"body":{"index.html":{}}}],["handy",{"_index":521,"title":{},"body":{"index.html":{}}}],["headers",{"_index":384,"title":{},"body":{"controllers/UsersController.html":{}}}],["hello",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":540,"title":{},"body":{"index.html":{}}}],["here",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["https://example.com/image.jpg",{"_index":226,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://example.com/image.jpg'})@isoptional()@isurl",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://nestjs.com",{"_index":580,"title":{},"body":{"index.html":{}}}],["https://schema.org",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https:\\/\\/schema.org\\\",\\r\\n",{"_index":224,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["id",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["import",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["including",{"_index":258,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["index",{"_index":49,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":44,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":45,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injecting",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["injection",{"_index":422,"title":{},"body":{"injectables/UsersService.html":{}}}],["installcompile",{"_index":502,"title":{},"body":{"index.html":{}}}],["interact",{"_index":545,"title":{},"body":{"index.html":{}}}],["ip",{"_index":385,"title":{},"body":{"controllers/UsersController.html":{}}}],["isarray",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauth",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isemail",{"_index":265,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus",{"_index":221,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":219,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isint",{"_index":276,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["isiso8601",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isjson",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/PatchPostDto.html":{}}}],["isoptional",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{}}}],["isoptional()@isjson",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isemail()@isnotempty",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":237,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(96",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(8)@matches(/^(?=.*[a",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(96",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["jane",{"_index":437,"title":{},"body":{"injectables/UsersService.html":{}}}],["jane@example.com",{"_index":439,"title":{},"body":{"injectables/UsersService.html":{}}}],["job",{"_index":560,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":562,"title":{},"body":{"index.html":{}}}],["john",{"_index":434,"title":{},"body":{"injectables/UsersService.html":{}}}],["john@example.com",{"_index":436,"title":{},"body":{"injectables/UsersService.html":{}}}],["join",{"_index":573,"title":{},"body":{"index.html":{}}}],["json",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["kamil",{"_index":577,"title":{},"body":{"index.html":{}}}],["key",{"_index":233,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{}}}],["lastname",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["learn",{"_index":524,"title":{},"body":{"index.html":{}}}],["legend",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letter",{"_index":261,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lettered",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["license",{"_index":583,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":565,"title":{},"body":{"index.html":{}}}],["limit",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":558,"title":{},"body":{"index.html":{}}}],["list",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["login",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":559,"title":{},"body":{"index.html":{}}}],["loop",{"_index":555,"title":{},"body":{"index.html":{}}}],["make",{"_index":156,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matches",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":269,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":220,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":541,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":266,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(96",{"_index":267,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["meta",{"_index":209,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["metadata",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":112,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["method",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["methods",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minimum",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":231,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(4",{"_index":216,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(8",{"_index":268,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":475,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":564,"title":{},"body":{"index.html":{}}}],["mode",{"_index":507,"title":{},"body":{"index.html":{}}}],["module",{"_index":20,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":22,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":525,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":578,"title":{},"body":{"index.html":{}}}],["name",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":550,"title":{},"body":{"index.html":{}}}],["nest",{"_index":495,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":582,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":290,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":214,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":302,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["node.js",{"_index":487,"title":{},"body":{"index.html":{}}}],["npm",{"_index":501,"title":{},"body":{"index.html":{}}}],["number",{"_index":260,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":232,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["offer",{"_index":561,"title":{},"body":{"index.html":{}}}],["official",{"_index":535,"title":{},"body":{"index.html":{}}}],["one",{"_index":259,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["open",{"_index":566,"title":{},"body":{"index.html":{}}}],["optional",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":210,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["out",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":587,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":459,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":321,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param.dto",{"_index":390,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param.dto.ts",{"_index":272,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:13",{"_index":275,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parameters",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseintpipe",{"_index":386,"title":{},"body":{"controllers/UsersController.html":{}}}],["part",{"_index":551,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":285,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["partialtype(createpostdto",{"_index":281,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["partialtype(createuserdto",{"_index":289,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["password",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["patch",{"_index":322,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patchpostdto",{"_index":278,"title":{"classes/PatchPostDto.html":{}},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["patchuser",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(@body",{"_index":409,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(patchuserdto",{"_index":380,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuserdto",{"_index":287,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["per",{"_index":372,"title":{},"body":{"controllers/UsersController.html":{}}}],["person",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["person\\\"\\r\\n",{"_index":225,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["please",{"_index":528,"title":{},"body":{"index.html":{}}}],["position",{"_index":375,"title":{},"body":{"controllers/UsersController.html":{}}}],["possible",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@apiresponse({status",{"_index":303,"title":{},"body":{"controllers/PostsController.html":{}}}],["post.dto",{"_index":286,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{}}}],["post.dto.ts",{"_index":108,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"coverage.html":{}}}],["post.dto.ts:110",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:12",{"_index":284,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["post.dto.ts:16",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:24",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:35",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:43",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:50",{"_index":127,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:58",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:66",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:74",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:84",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts",{"_index":295,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.controller",{"_index":345,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":293,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":33,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":323,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["poststatus",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype",{"_index":113,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":509,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":486,"title":{},"body":{"index.html":{}}}],["project",{"_index":499,"title":{},"body":{"index.html":{}}}],["properties",{"_index":109,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["providers",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":324,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":391,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["published",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["published\"'})@isenum(poststatus)@isnotempty",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["publishon",{"_index":114,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["put",{"_index":382,"title":{},"body":{"controllers/UsersController.html":{}}}],["query",{"_index":373,"title":{},"body":{"controllers/UsersController.html":{}}}],["query'})@apiquery({name",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":399,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":401,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":526,"title":{},"body":{"index.html":{}}}],["r\\n",{"_index":223,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["read",{"_index":574,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["real",{"_index":546,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{}}}],["repository",{"_index":498,"title":{},"body":{"index.html":{}}}],["request",{"_index":407,"title":{},"body":{"controllers/UsersController.html":{}}}],["required",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["required:false",{"_index":397,"title":{},"body":{"controllers/UsersController.html":{}}}],["reset",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":519,"title":{},"body":{"index.html":{}}}],["response",{"_index":317,"title":{},"body":{"controllers/PostsController.html":{}}}],["results",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returned",{"_index":371,"title":{},"body":{"controllers/UsersController.html":{}}}],["returns",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["root",{"_index":483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["route",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":503,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":491,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["schema",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["schemas",{"_index":115,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["sent",{"_index":406,"title":{},"body":{"controllers/UsersController.html":{}}}],["serialize",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["series",{"_index":218,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["series\"'})@isenum(posttype)@isnotempty",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["server",{"_index":492,"title":{},"body":{"index.html":{}}}],["service",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/UsersService.html":{}}}],["setup",{"_index":500,"title":{},"body":{"index.html":{}}}],["side",{"_index":493,"title":{},"body":{"index.html":{}}}],["sidebarenabled",{"_index":234,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["slug",{"_index":116,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["small",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["smith",{"_index":438,"title":{},"body":{"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["space",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["special",{"_index":262,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["specific",{"_index":273,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["sponsors",{"_index":569,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../poststatus.enum.ts",{"_index":477,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../posttype.enum.ts",{"_index":478,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:10",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":415,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":75,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":432,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:11",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:18",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":450,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dtos/create",{"_index":107,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["src/posts/dtos/patch",{"_index":279,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["src/posts/enums/poststatus.enum.ts",{"_index":479,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/enums/posttype.enum.ts",{"_index":480,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/posts.controller.ts",{"_index":294,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:17",{"_index":312,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:29",{"_index":308,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:41",{"_index":319,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":344,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":346,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:10",{"_index":350,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:5",{"_index":348,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/users/dtos/create",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":271,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":288,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["src/users/providers/users.service.ts",{"_index":416,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:24",{"_index":429,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:33",{"_index":424,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:50",{"_index":426,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:9",{"_index":420,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:49",{"_index":379,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:58",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:64",{"_index":381,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":78,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":413,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":505,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":508,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":510,"title":{},"body":{"index.html":{}}}],["started",{"_index":485,"title":{"index.html":{}},"body":{}}],["starter",{"_index":497,"title":{},"body":{"index.html":{}}}],["statements",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":554,"title":{},"body":{"index.html":{}}}],["story",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["string",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["successfully",{"_index":336,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["successfully'})@patch",{"_index":318,"title":{},"body":{"controllers/PostsController.html":{}}}],["successfully'})@post",{"_index":307,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary",{"_index":335,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":527,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["svg",{"_index":585,"title":{},"body":{"modules.html":{}}}],["table",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["tag1",{"_index":228,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["tag2",{"_index":229,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["tag3",{"_index":230,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["tags",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["test",{"_index":513,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":516,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":515,"title":{},"body":{"index.html":{}}}],["tests",{"_index":511,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":568,"title":{},"body":{"index.html":{}}}],["this.authservice.isauth",{"_index":428,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.postsservice.findall(userid",{"_index":334,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.usersservice.findall(getusersparamdto",{"_index":403,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyid(\"1234",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbyid(userid",{"_index":351,"title":{},"body":{"injectables/PostsService.html":{}}}],["thrown",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["time",{"_index":547,"title":{},"body":{"index.html":{}}}],["title",{"_index":119,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["topic",{"_index":215,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["topic'})@isstring()@isnotempty()@minlength(4",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["touch",{"_index":575,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":207,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{}}}],["true})@minlength(3",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":581,"title":{},"body":{"index.html":{}}}],["type",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["types",{"_index":291,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":496,"title":{},"body":{"index.html":{}}}],["undefined})@isoptional()@isarray()@isstring({each",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":512,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":592,"title":{},"body":{"properties.html":{}}}],["updated",{"_index":282,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{}}}],["updatepost",{"_index":298,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(@body",{"_index":339,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(patchpostdto",{"_index":314,"title":{},"body":{"controllers/PostsController.html":{}}}],["updates",{"_index":315,"title":{},"body":{"controllers/PostsController.html":{},"index.html":{}}}],["url",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["url'})@isstring()@isnotempty()@matches(/^[a",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["user",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["user's",{"_index":332,"title":{},"body":{"controllers/PostsController.html":{}}}],["user.dto",{"_index":292,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":264,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userid",{"_index":313,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["users",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.controller",{"_index":414,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":353,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":34,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":84,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["using",{"_index":548,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":203,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validationpipe",{"_index":388,"title":{},"body":{"controllers/UsersController.html":{}}}],["validator",{"_index":204,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"dependencies.html":{}}}],["value",{"_index":235,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["version",{"_index":590,"title":{},"body":{"properties.html":{}}}],["video",{"_index":536,"title":{},"body":{"index.html":{}}}],["visit",{"_index":523,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":543,"title":{},"body":{"index.html":{}}}],["void",{"_index":309,"title":{},"body":{"controllers/PostsController.html":{}}}],["want",{"_index":376,"title":{},"body":{"controllers/UsersController.html":{}}}],["watch",{"_index":506,"title":{},"body":{"index.html":{}}}],["website",{"_index":579,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["without",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["working",{"_index":522,"title":{},"body":{"index.html":{}}}],["world",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":557,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":572,"title":{},"body":{"index.html":{}}}],["z0",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["z\\d@$!%*#?&]{8",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*#?&])[a",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Class that with no route.\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n/**\n * Class that with no route.\n */\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [UsersModule, PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to connect to users\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:10\n                        \n                    \n\n\n            \n                \n                        method\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n/**\n * Class to connect to users\n */\n@Injectable()\nexport class AppService {\n  /**\n   * method\n   */\n  getHello(): string {\n    return 'Hello World From Nestjs!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(\n        // Injecting auth service\n        private readonly authService: AuthService\n    ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n  exports: [AuthService],\n  imports: [forwardRef(() => UsersModule)]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    // injecting users service\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n  ) {}\n  public login(email: string, password: string, id: string) {\n    const user = this.usersService.findUserById(\"1234\")\n\n    user\n    return 'ACCESS_TOKEN'\n  }\n\n  public isAuth() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schemas\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'This is the content of the post', example: 'Welcome, here we go....'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'This is a feature image url for the blog post', example: 'https://example.com/image.jpg'})@IsOptional()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'array', required: false, items: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: postType, description: 'Possible values: \"post\", \"page\", \"story\", \"series\"'})@IsEnum(postType)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'This is the date when the post should be published', example: '2022-01-01T12:00:00Z'})@IsOptional()@IsISO8601()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schemas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Make sure you serialize your JSON schema, else an error will be thrown', example: '{\n \"@context\": \"https://schema.org\",\n \"@type\": \"Person\"\n }'})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Example: \"my-url\"', example: 'my-url'})@IsString()@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'A slug should be small lettered and uses only \"-\" and without space.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: postStatus, description: 'Possible values: \"draft\", \"scheduled\", \"review\", \"published\"'})@IsEnum(postStatus)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'This is an array of tags for the blog post', example: undefined})@IsOptional()@IsArray()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'This is a title', description: 'The name given to the post as the topic'})@IsString()@IsNotEmpty()@MinLength(4)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsEnum, IsISO8601, IsJSON, IsNotEmpty, IsOptional, IsString, IsUrl, Matches, MinLength, ValidateNested } from \"class-validator\";\nimport { postStatus } from \"../enums/postStatus.enum\";\nimport { postType } from \"../enums/postType.enum\";\nimport { Type } from \"class-transformer\";\nimport { CreatePostMetaOptionsDto } from \"./create-post-meta-options-dto\";\nimport { ApiProperty, ApiPropertyOptional } from \"@nestjs/swagger\";\n\nexport class CreatePostDto {\n    @ApiProperty({\n        example: \"This is a title\",\n        description: \"The name given to the post as the topic\"\n    })\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(4)\n    title: string;\n    \n    @ApiProperty({\n        enum: postType,\n        description: 'Possible values: \"post\", \"page\", \"story\", \"series\"',\n    })\n    @IsEnum(postType)\n    @IsNotEmpty()\n    postType: postType;\n\n    @ApiProperty({\n        description: 'Example: \"my-url\"',\n        example: 'my-url',\n    })\n    @IsString()\n    @IsNotEmpty()\n    @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {\n        message: 'A slug should be small lettered and uses only \"-\" and without space.'\n    })\n    slug: string;\n\n    @ApiProperty({\n        enum: postStatus,\n        description: 'Possible values: \"draft\", \"scheduled\", \"review\", \"published\"',\n    })\n    @IsEnum(postStatus)\n    @IsNotEmpty()\n    status: postStatus;\n    @ApiPropertyOptional({\n        description: 'This is the content of the post',\n        example: 'Welcome, here we go....'\n    })\n    @IsOptional()\n    @IsString()\n    content?: string;\n    \n    @ApiPropertyOptional({\n        description: 'Make sure you serialize your JSON schema, else an error will be thrown',\n        example: '{\\r\\n \\\"@context\\\": \\\"https:\\/\\/schema.org\\\",\\r\\n \\\"@type\\\": \\\"Person\\\"\\r\\n }'\n    })\n    @IsOptional()\n    @IsJSON()\n    schemas?: string;\n\n    @ApiPropertyOptional({\n        description: 'This is a feature image url for the blog post',\n        example: 'https://example.com/image.jpg'\n    })\n    @IsOptional()\n    @IsUrl()\n    featuredImageUrl?: string;\n\n    @ApiPropertyOptional({\n        description: 'This is the date when the post should be published',\n        example: '2022-01-01T12:00:00Z'\n    })\n    @IsOptional()\n    @IsISO8601()\n    publishOn?: Date;\n\n    @ApiPropertyOptional({\n        description: 'This is an array of tags for the blog post',\n        example: ['tag1', 'tag2', 'tag3']\n    })\n    @IsOptional()\n    @IsArray()\n    @IsString({ each: true })\n    @MinLength(3, { each: true })\n    tags?: string[];\n    \n    @ApiPropertyOptional({\n        type: 'array',\n        required: false,\n        items: {\n            type: 'object',\n            properties: {\n                key: { \n                    type: 'string',\n                    description: 'The key of string type for our post meta options',\n                    example: 'sidebarEnabled',\n                },\n                value: { \n                    type: 'any',\n                    description: 'The value of any type for our post meta options',\n                    example: true,\n                }\n            },\n            required: ['key', 'value']\n        }\n    })\n    @IsOptional()\n    @IsArray()\n    @ValidateNested({ each: true })\n    @Type(() => CreatePostMetaOptionsDto)\n    metaOptions: CreatePostMetaOptionsDto[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostMetaOptionsDto.html":{"url":"classes/CreatePostMetaOptionsDto.html","title":"class - CreatePostMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post-meta-options-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-options-dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-meta-options-dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreatePostMetaOptionsDto {\n    @IsString()\n    @IsNotEmpty()\n    key: string;\n\n    @IsNotEmpty()\n    value: any;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {message: 'Minimum of 8 characters including at least one number, letter and a special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString, Matches, MaxLength, MinLength } from 'class-validator'\nexport class CreateUserDto {\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(3)\n    @MaxLength(96)\n    firstName: string;\n\n    @IsString()\n    @IsOptional()\n    @MinLength(3)\n    @MaxLength(96)\n    lastName?: string;\n\n    @IsString()\n    @IsEmail()\n    @IsNotEmpty()\n    email: string;\n\n    @IsString()\n    @IsNotEmpty()\n    @MinLength(8)\n    @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {\n        message: 'Minimum of 8 characters including at least one number, letter and a special character'\n    })\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Get user with a specific id', example: 1234})@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users-param.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsOptional } from \"class-validator\";\nimport { Type } from \"class-transformer\";\nimport { ApiPropertyOptional } from \"@nestjs/swagger\";\n\nexport class GetUsersParamDto {\n    @ApiPropertyOptional({\n        description: 'Get user with a specific id',\n        example: 1234\n    })\n    @IsOptional()\n    @IsInt()\n    @Type(() => Number)\n    id?: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostDto.html":{"url":"classes/PatchPostDto.html","title":"class - PatchPostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/patch-post.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the post to be updated', example: 1234})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/patch-post.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from \"@nestjs/swagger\";\nimport { IsInt, IsNotEmpty } from \"class-validator\";\nimport { CreatePostDto } from \"./create-post.dto\";\n\nexport class PatchPostDto extends PartialType(CreatePostDto) {\n    @ApiProperty({\n        description: 'The id of the post to be updated',\n        example: 1234\n    })\n    @IsInt()\n    @IsNotEmpty()\n    id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateUserDto } from \"./create-user.dto\";\n\nexport class PatchUserDto extends PartialType(CreateUserDto) {}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                createPost\n                            \n                            \n                                    \n                                    Public\n                                getPosts\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPost: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Creates a new blog post'})@ApiResponse({status: 201, description: 'Returns status code 201 if blog post is created successfully'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPost\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:userId?')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePost(patchPostDto: PatchPostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Updates the content of blog post'})@ApiResponse({status: 201, description: 'A 200 response if blog post is updated successfully'})@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post } from '@nestjs/common';\nimport { PostsService } from './providers/posts.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreatePostDto } from './dtos/create-post.dto';\nimport { PatchPostDto } from './dtos/patch-post.dto';\n\n@Controller('posts')\n@ApiTags('Posts')\nexport class PostsController {\n  constructor(\n    // Injecting the service\n    private readonly postsService: PostsService,\n  ) {}\n\n// get all user's posts by userId\n  @Get('/:userId?')\n  public getPosts(@Param() userId: string) {\n    return this.postsService.findAll(userId)\n  }\n\n  @ApiOperation({\n    summary: \"Creates a new blog post\"\n  })\n  @ApiResponse({\n    status: 201,\n    description: \"Returns status code 201 if blog post is created successfully\"\n  })\n  @Post()\n  public createPost(@Body() createPost: CreatePostDto) {\n    console.log(createPost)\n  }\n\n  @ApiOperation({\n    summary: \"Updates the content of blog post\"\n  })\n  @ApiResponse({\n    status: 201,\n    description: \"A 200 response if blog post is updated successfully\"\n  })\n  @Patch()\n  public updatePost(@Body() patchPostDto: PatchPostDto) {\n    console.log(patchPostDto)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_PostsModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './providers/posts.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n  imports: [UsersModule]\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class PostsService {\n  constructor(\n    // Injecting usersService\n    private readonly usersService: UsersService,\n  ) {}\n  public findAll(userId: string) {\n    const user = this.usersService.findUserById(userId)\n    return [\n        { \n            user: user,\n            title: 'post', \n            content: 'post content' \n        },\n        { \n            user: user,\n            title: 'post 2', \n            content: 'post content 2' \n        },\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id?')@ApiOperation({summary: 'Fetches a list of registered users on the application'})@ApiResponse({status: 200, description: 'Users fetched successfully based on the query'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page number you want the api to return', example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(patchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchUserDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Patch,\n  Put,\n  Param,\n  Delete,\n  Query,\n  Body,\n  Headers,\n  Ip,\n  ParseIntPipe,\n  DefaultValuePipe,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { GetUsersParamDto } from './dtos/get-users-param.dto';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { UsersService } from './providers/users.service';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n  @Get('/:id?')\n  @ApiOperation({\n    summary: 'Fetches a list of registered users on the application'\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Users fetched successfully based on the query'\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number', \n    required:false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number', \n    required:false,\n    description: 'The position of the page number you want the api to return',\n    example: 1,\n  })\n  public getUsers(\n    @Param() getUsersParamDto: GetUsersParamDto,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    return this.usersService.findAll(getUsersParamDto, limit, page);\n  }\n\n  @Post()\n  public createUser(@Body() createUserDto: CreateUserDto) {\n    console.log(createUserDto);\n    return 'You sent a post request to users endpoint.';\n  }\n\n  @Patch()\n  public patchUser(@Body() patchUserDto: PatchUserDto) {\n    return patchUserDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './providers/users.service';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n    controllers: [UsersController],\n    providers: [UsersService],\n    exports: [UsersService],\n    imports: [forwardRef(() => AuthModule)]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Class that connects to the users endpoint\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findUserById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            Circular injection service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:33\n                        \n                    \n\n\n            \n                \n                        The method to get all the users\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:50\n                        \n                    \n\n\n            \n                \n                        The method to get user by id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: number; name: string; email: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authService.isAuth()\n                    \n                \n                    \n                        \n                                Defined in src/users/providers/users.service.ts:24\n                        \n                    \n\n            \n                \n                    Checks if user is authenticated\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { GetUsersParamDto } from '../dtos/get-users-param.dto';\nimport { AuthService } from 'src/auth/providers/auth.service';\n\n/**\n * Class that connects to the users endpoint\n */\n@Injectable()\nexport class UsersService {\n\n  /**\n   * Circular injection service\n   * @param authService \n   */\n  constructor(\n    // Injecting auth service\n    @Inject(forwardRef(() => AuthService))\n    private readonly authService: AuthService,\n  ) {}\n\n  /**\n   * Checks if user is authenticated\n   */\n  public isAuth = this.authService.isAuth();\n\n  /**\n   * The method to get all the users\n   * @param getUsersParamDto \n   * @param limit \n   * @param page \n   * @returns \n   */\n  public findAll(\n    getUsersParamDto: GetUsersParamDto,\n    limit: number,\n    page: number,\n  ) {\n    console.log(this.isAuth);\n    return [\n      { id: 1, name: 'John Doe', email: 'john@example.com' },\n      { id: 2, name: 'Jane Smith', email: 'jane@example.com' },\n    ];\n  }\n  \n  /**\n   * The method to get user by id\n   * @param id \n   * @returns \n   */\n  public findUserById(id: string) {\n    return { id: 1, name: 'John Doe', email: 'john@example.com' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post-meta-options-dto.ts\n            \n            class\n            CreatePostMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dtos/patch-post.dto.ts\n            \n            class\n            PatchPostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users-param.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            postStatus   (src/.../postStatus.enum.ts)\n                        \n                        \n                            postType   (src/.../postType.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/enums/postStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postStatus\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n    src/posts/enums/postType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        The method to the root of the application\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
